{"ast":null,"code":"Date.prototype.AddDays = function (days) {\n  let date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nconst minimumImportance = 8;\nexport const addDays = (date, days) => {\n  return date.AddDays(days);\n};\nexport const filterWithinPeriod = (Info, datefield, lowerBoundDate, upperBoundDate) => {\n  return Info.filter(info => {\n    const infoDate = new Date(info[`${datefield}`]);\n    return infoDate <= new Date(upperBoundDate) && infoDate >= new Date(lowerBoundDate);\n  });\n};\nexport function getKeyByValue(object, value) {\n  return Object.keys(object).find(key => object[key] === value);\n} //sort soonest to latest\n\nexport const sortTimings = (info, key) => {\n  return info.sort((a, b) => {\n    const aDate = new Date(a[`${key}`]);\n    const bDate = new Date(b[`${key}`]);\n    return aDate.getTime() - bDate.getTime();\n  });\n};\nexport const sortImportance = (info, field) => {\n  return info.sort(function (a, b) {\n    return b[`${field}`] - a[`${field}`];\n  });\n};\nexport const filterImportance = (info, field) => {\n  return info.filter(info => {\n    return info[field] > minimumImportance;\n  });\n};\nexport const getAllMatchesFromEvent = (matches, events, eventId) => {\n  return events.filter(event => {\n    return matches.eventId == eventId;\n  });\n};\nexport const getTimeObj = date => {\n  const minutes = function () {\n    if (date.getMinutes() == 0) {\n      return \"00\";\n    } else {\n      return date.getMinutes();\n    }\n  }();\n\n  const Ordinal = day => {\n    let ordinal = \"\";\n\n    if (day > 3) {\n      ordinal = \"th\";\n    }\n\n    if (day === 3) {\n      ordinal = \"rd\";\n    }\n\n    if (day === 2) {\n      ordinal = \"nd\";\n    }\n\n    if (day === 1) {\n      ordinal = \"st\";\n    }\n\n    return ordinal;\n  };\n\n  const day = date.getDate();\n  const ordinal = Ordinal(day);\n  const month = date.toLocaleString(\"default\", {\n    month: \"long\"\n  });\n  const dayName = date.toLocaleString(\"default\", {\n    weekday: \"long\"\n  });\n  const year = date.getFullYear();\n  return {\n    date: date,\n    hour: date.getHours(),\n    ordinal: ordinal,\n    minutes: minutes,\n    day: day,\n    month: month,\n    year: year,\n    dayName: dayName\n  };\n};\nexport const createWeekObj = () => {\n  const daysOfTheWeek = {\n    day0: \"Monday\",\n    day1: \"Tuesday\",\n    day2: \"Wednesday\",\n    day3: \"Thursday\",\n    day4: \"Friday\",\n    day5: \"Saturday\",\n    day6: \"Sunday\"\n  };\n  let days = {};\n  const firstDayNumber = new Date().getDay();\n\n  for (let i = 0; i < 7; i++) {\n    days[`day${i}`] = daysOfTheWeek[`day${(firstDayNumber + i - 1) % 7}`];\n  }\n\n  return days;\n};\nexport const createWeek = () => {\n  const daysOfTheWeek = {\n    day0: [],\n    day1: [],\n    day2: [],\n    day3: [],\n    day4: [],\n    day5: [],\n    day6: []\n  };\n  return daysOfTheWeek;\n};\nexport const getEventName = (Events, eventId) => {\n  // console.log(\"AllEvents\", AllEvents);\n  //console.log(eventID);\n  return Events.filter(info => {\n    return info.id == eventId;\n  })[0].name;\n};\nexport const getEvent = (Events, eventId) => {\n  return Events.filter(info => {\n    return info.id == eventId;\n  })[0];\n};\nexport const getPlayerFlag = player => {\n  // console.log(playerObj.Country);\n  if (player.country == \"US\" && player.state != null) {\n    return `flags/usflags/${player.State}.png`;\n  } else {\n    return `flags/WorldFlag/4x3/${player.Country}.svg`;\n  }\n};\nexport const getPlayer = (PlayerDetails, playerId) => {\n  const player = PlayerDetails.filter(Player => {\n    return Player.id == playerId;\n  })[0];\n  return player;\n};\nexport const calculateTimeLeft = date => {\n  if (date > new Date()) {\n    function checkLessThan10(num) {\n      if (num < 10) {\n        return `0${num}`;\n      } else return num;\n    }\n\n    let difference = +new Date(date) - +new Date();\n    let timeLeft;\n\n    if (difference > 0) {\n      timeLeft = {\n        d: checkLessThan10(Math.floor(difference / (1000 * 60 * 60 * 24))),\n        h: checkLessThan10(Math.floor(difference / (1000 * 60 * 60) % 24)),\n        m: checkLessThan10(Math.floor(difference / 1000 / 60 % 60)),\n        s: checkLessThan10(Math.floor(difference / 1000 % 60))\n      };\n    }\n\n    if (timeLeft.d > 0) {\n      return `${timeLeft.d}d : ${timeLeft.h}h : ${timeLeft.m}m : ${timeLeft.s}s`;\n    } else if (timeLeft.h > 0) {\n      return `${timeLeft.h}h : ${timeLeft.m}m : ${timeLeft.s}s`;\n    } else if (timeLeft.m > 0) {\n      return `${timeLeft.m}m : ${timeLeft.s}s`;\n    } else if (timeLeft.s > 0) {\n      return `${timeLeft.s}s`;\n    }\n  }\n};\nexport const getPlayerPhoto = (PlayerDetails, playerId) => {\n  const player = PlayerDetails.filter(Players => {\n    return Players.id === playerId;\n  })[0];\n  console.log(player);\n\n  if (player.Photo == true) {\n    return `http://localhost:3001/profile/${player.Alias}.png`;\n  } else {\n    return `http://localhost:3001/profile/placeholder.svg`;\n  }\n};\nexport const getPlayerMatchHistory = (Matches, playerId) => {\n  return Matches.filter(match => {\n    return match.player1Id == playerId || match.player2Id == playerId;\n  });\n};\nexport const getMatchResults = (GameResults, matchId) => {\n  GameResults.filter(result => {\n    return result.matchId == matchId;\n  });\n};\nexport const getPlayerScore = (info, playerId) => {\n  if (info.player1Id == playerId) {\n    return info.player1Score;\n  } else if (info.player2Id == playerId) {\n    return info.player2Score;\n  }\n};\nexport const getOpponentScore = (info, playerId) => {\n  if (info.player1Id != playerId) {\n    return info.player1Score;\n  } else if (info.player2Id != playerId) {\n    return info.player2Score;\n  }\n};\nexport const playerStatistics = (Info, playerId, lowerBoundDate, UpperBoundDate) => {\n  const matchPeriod = filterWithinPeriod(Info.Matches, \"DateTime\", lowerBoundDate, UpperBoundDate);\n  const playerHistory = getPlayerMatchHistory(matchPeriod, playerId);\n  const matchesWon = playerHistory.filter(match => {\n    return match.winnerId == playerId;\n  });\n  const matchesLost = playerHistory.filter(match => {\n    return match.winnerId != playerId;\n  });\n\n  const gamesWon = () => {\n    let score = 0;\n    playerHistory.forEach(match => {\n      score += getPlayerScore(match, playerId);\n    });\n    return score;\n  };\n\n  const gamesLost = () => {\n    let score = 0;\n    playerHistory.forEach(match => {\n      score += getOpponentScore(match, playerId);\n    });\n    return score;\n  };\n\n  const averageLosingScore = () => {\n    let totalScore = 0;\n    let totalGamesLost = 0;\n    playerHistory.forEach(match => {\n      let matchResults = getMatchResults(Info.GameResults);\n      matchResults.forEach(result => {\n        if (result.winnerId != playerId) {\n          totalScore += getPlayerScore(result, playerId);\n          totalGamesLost += 1;\n        }\n      });\n    });\n    return totalScore / totalGamesLost;\n  };\n\n  const playerStats = {\n    elo: 0,\n    totalMatches: playerHistory.length,\n    matchesWon: matchesWon.length,\n    matchesLost: matchesLost.length,\n    gamesWon: gamesWon(),\n    gamesLost: gamesLost(),\n    averageLosingScore: averageLosingScore(),\n    notableWinsOver: 0\n  };\n  return playerStats;\n};","map":{"version":3,"names":["Date","prototype","AddDays","days","date","valueOf","setDate","getDate","minimumImportance","addDays","filterWithinPeriod","Info","datefield","lowerBoundDate","upperBoundDate","filter","info","infoDate","getKeyByValue","object","value","Object","keys","find","key","sortTimings","sort","a","b","aDate","bDate","getTime","sortImportance","field","filterImportance","getAllMatchesFromEvent","matches","events","eventId","event","getTimeObj","minutes","getMinutes","Ordinal","day","ordinal","month","toLocaleString","dayName","weekday","year","getFullYear","hour","getHours","createWeekObj","daysOfTheWeek","day0","day1","day2","day3","day4","day5","day6","firstDayNumber","getDay","i","createWeek","getEventName","Events","id","name","getEvent","getPlayerFlag","player","country","state","State","Country","getPlayer","PlayerDetails","playerId","Player","calculateTimeLeft","checkLessThan10","num","difference","timeLeft","d","Math","floor","h","m","s","getPlayerPhoto","Players","console","log","Photo","Alias","getPlayerMatchHistory","Matches","match","player1Id","player2Id","getMatchResults","GameResults","matchId","result","getPlayerScore","player1Score","player2Score","getOpponentScore","playerStatistics","UpperBoundDate","matchPeriod","playerHistory","matchesWon","winnerId","matchesLost","gamesWon","score","forEach","gamesLost","averageLosingScore","totalScore","totalGamesLost","matchResults","playerStats","elo","totalMatches","length","notableWinsOver"],"sources":["C:/Users/user/Documents/Rocket Academy/TetrisHub.1/client/src/components/infoFunctions.js"],"sourcesContent":["Date.prototype.AddDays = function (days) {\r\n  let date = new Date(this.valueOf());\r\n  date.setDate(date.getDate() + days);\r\n  return date;\r\n};\r\n\r\nconst minimumImportance = 8;\r\n\r\nexport const addDays = (date, days) => {\r\n  return date.AddDays(days);\r\n};\r\n\r\nexport const filterWithinPeriod = (\r\n  Info,\r\n  datefield,\r\n  lowerBoundDate,\r\n  upperBoundDate,\r\n) => {\r\n  return Info.filter((info) => {\r\n    const infoDate = new Date(info[`${datefield}`]);\r\n    return (\r\n      infoDate <= new Date(upperBoundDate) &&\r\n      infoDate >= new Date(lowerBoundDate)\r\n    );\r\n  });\r\n};\r\n\r\nexport function getKeyByValue(object, value) {\r\n  return Object.keys(object).find((key) => object[key] === value);\r\n}\r\n\r\n//sort soonest to latest\r\nexport const sortTimings = (info, key) => {\r\n  return info.sort((a, b) => {\r\n    const aDate = new Date(a[`${key}`]);\r\n    const bDate = new Date(b[`${key}`]);\r\n\r\n    return aDate.getTime() - bDate.getTime();\r\n  });\r\n};\r\n\r\nexport const sortImportance = (info, field) => {\r\n  return info.sort(function (a, b) {\r\n    return b[`${field}`] - a[`${field}`];\r\n  });\r\n};\r\n\r\nexport const filterImportance = (info, field) => {\r\n  return info.filter((info) => {\r\n    return info[field] > minimumImportance;\r\n  });\r\n};\r\n\r\nexport const getAllMatchesFromEvent = (matches, events, eventId) => {\r\n  return events.filter((event) => {\r\n    return matches.eventId == eventId;\r\n  });\r\n};\r\n\r\nexport const getTimeObj = (date) => {\r\n  const minutes = (function () {\r\n    if (date.getMinutes() == 0) {\r\n      return \"00\";\r\n    } else {\r\n      return date.getMinutes();\r\n    }\r\n  })();\r\n\r\n  const Ordinal = (day) => {\r\n    let ordinal = \"\";\r\n    if (day > 3) {\r\n      ordinal = \"th\";\r\n    }\r\n    if (day === 3) {\r\n      ordinal = \"rd\";\r\n    }\r\n    if (day === 2) {\r\n      ordinal = \"nd\";\r\n    }\r\n    if (day === 1) {\r\n      ordinal = \"st\";\r\n    }\r\n    return ordinal;\r\n  };\r\n  const day = date.getDate();\r\n  const ordinal = Ordinal(day);\r\n  const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n  const dayName = date.toLocaleString(\"default\", { weekday: \"long\" });\r\n  const year = date.getFullYear();\r\n  return {\r\n    date: date,\r\n    hour: date.getHours(),\r\n    ordinal: ordinal,\r\n    minutes: minutes,\r\n    day: day,\r\n    month: month,\r\n    year: year,\r\n    dayName: dayName,\r\n  };\r\n};\r\n\r\nexport const createWeekObj = () => {\r\n  const daysOfTheWeek = {\r\n    day0: \"Monday\",\r\n    day1: \"Tuesday\",\r\n    day2: \"Wednesday\",\r\n    day3: \"Thursday\",\r\n    day4: \"Friday\",\r\n    day5: \"Saturday\",\r\n    day6: \"Sunday\",\r\n  };\r\n  let days = {};\r\n  const firstDayNumber = new Date().getDay();\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    days[`day${i}`] = daysOfTheWeek[`day${(firstDayNumber + i - 1) % 7}`];\r\n  }\r\n  return days;\r\n};\r\n\r\nexport const createWeek = () => {\r\n  const daysOfTheWeek = {\r\n    day0: [],\r\n    day1: [],\r\n    day2: [],\r\n    day3: [],\r\n    day4: [],\r\n    day5: [],\r\n    day6: [],\r\n  };\r\n  return daysOfTheWeek;\r\n};\r\n\r\nexport const getEventName = (Events, eventId) => {\r\n  // console.log(\"AllEvents\", AllEvents);\r\n  //console.log(eventID);\r\n  return Events.filter((info) => {\r\n    return info.id == eventId;\r\n  })[0].name;\r\n};\r\n\r\nexport const getEvent = (Events, eventId) => {\r\n  return Events.filter((info) => {\r\n    return info.id == eventId;\r\n  })[0];\r\n};\r\n\r\nexport const getPlayerFlag = (player) => {\r\n  // console.log(playerObj.Country);\r\n  if (player.country == \"US\" && player.state != null) {\r\n    return `flags/usflags/${player.State}.png`;\r\n  } else {\r\n    return `flags/WorldFlag/4x3/${player.Country}.svg`;\r\n  }\r\n};\r\n\r\nexport const getPlayer = (PlayerDetails, playerId) => {\r\n  const player = PlayerDetails.filter((Player) => {\r\n    return Player.id == playerId;\r\n  })[0];\r\n\r\n  return player;\r\n};\r\n\r\nexport const calculateTimeLeft = (date) => {\r\n  if (date > new Date()) {\r\n    function checkLessThan10(num) {\r\n      if (num < 10) {\r\n        return `0${num}`;\r\n      } else return num;\r\n    }\r\n\r\n    let difference = +new Date(date) - +new Date();\r\n\r\n    let timeLeft;\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        d: checkLessThan10(Math.floor(difference / (1000 * 60 * 60 * 24))),\r\n        h: checkLessThan10(Math.floor((difference / (1000 * 60 * 60)) % 24)),\r\n        m: checkLessThan10(Math.floor((difference / 1000 / 60) % 60)),\r\n        s: checkLessThan10(Math.floor((difference / 1000) % 60)),\r\n      };\r\n    }\r\n\r\n    if (timeLeft.d > 0) {\r\n      return `${timeLeft.d}d : ${timeLeft.h}h : ${timeLeft.m}m : ${timeLeft.s}s`;\r\n    } else if (timeLeft.h > 0) {\r\n      return `${timeLeft.h}h : ${timeLeft.m}m : ${timeLeft.s}s`;\r\n    } else if (timeLeft.m > 0) {\r\n      return `${timeLeft.m}m : ${timeLeft.s}s`;\r\n    } else if (timeLeft.s > 0) {\r\n      return `${timeLeft.s}s`;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPlayerPhoto = (PlayerDetails, playerId) => {\r\n  const player = PlayerDetails.filter((Players) => {\r\n    return Players.id === playerId;\r\n  })[0];\r\n  console.log(player);\r\n  if (player.Photo == true) {\r\n    return `http://localhost:3001/profile/${player.Alias}.png`;\r\n  } else {\r\n    return `http://localhost:3001/profile/placeholder.svg`;\r\n  }\r\n};\r\n\r\nexport const getPlayerMatchHistory = (Matches, playerId) => {\r\n  return Matches.filter((match) => {\r\n    return match.player1Id == playerId || match.player2Id == playerId;\r\n  });\r\n};\r\n\r\nexport const getMatchResults = (GameResults, matchId) => {\r\n  GameResults.filter((result) => {\r\n    return result.matchId == matchId;\r\n  });\r\n};\r\n\r\nexport const getPlayerScore = (info, playerId) => {\r\n  if (info.player1Id == playerId) {\r\n    return info.player1Score;\r\n  } else if (info.player2Id == playerId) {\r\n    return info.player2Score;\r\n  }\r\n};\r\n\r\nexport const getOpponentScore = (info, playerId) => {\r\n  if (info.player1Id != playerId) {\r\n    return info.player1Score;\r\n  } else if (info.player2Id != playerId) {\r\n    return info.player2Score;\r\n  }\r\n};\r\n\r\nexport const playerStatistics = (\r\n  Info,\r\n  playerId,\r\n  lowerBoundDate,\r\n  UpperBoundDate,\r\n) => {\r\n  const matchPeriod = filterWithinPeriod(\r\n    Info.Matches,\r\n    \"DateTime\",\r\n    lowerBoundDate,\r\n    UpperBoundDate,\r\n  );\r\n  const playerHistory = getPlayerMatchHistory(matchPeriod, playerId);\r\n  const matchesWon = playerHistory.filter((match) => {\r\n    return match.winnerId == playerId;\r\n  });\r\n  const matchesLost = playerHistory.filter((match) => {\r\n    return match.winnerId != playerId;\r\n  });\r\n\r\n  const gamesWon = () => {\r\n    let score = 0;\r\n    playerHistory.forEach((match) => {\r\n      score += getPlayerScore(match, playerId);\r\n    });\r\n    return score;\r\n  };\r\n\r\n  const gamesLost = () => {\r\n    let score = 0;\r\n    playerHistory.forEach((match) => {\r\n      score += getOpponentScore(match, playerId);\r\n    });\r\n    return score;\r\n  };\r\n\r\n  const averageLosingScore = () => {\r\n    let totalScore = 0;\r\n    let totalGamesLost = 0;\r\n    playerHistory.forEach((match) => {\r\n      let matchResults = getMatchResults(Info.GameResults);\r\n      matchResults.forEach((result) => {\r\n        if (result.winnerId != playerId) {\r\n          totalScore += getPlayerScore(result, playerId);\r\n          totalGamesLost += 1;\r\n        }\r\n      });\r\n    });\r\n    return totalScore / totalGamesLost;\r\n  };\r\n\r\n  const playerStats = {\r\n    elo: 0,\r\n    totalMatches: playerHistory.length,\r\n    matchesWon: matchesWon.length,\r\n    matchesLost: matchesLost.length,\r\n    gamesWon: gamesWon(),\r\n    gamesLost: gamesLost(),\r\n    averageLosingScore: averageLosingScore(),\r\n    notableWinsOver: 0,\r\n  };\r\n  return playerStats;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}